esphome: 
  on_boot:
    priority: -200 # Highest priority, ensures enable pin to be turned off first
    then:
      - output.turn_off: ${stepper_motor_id}_enable_pin # set the enable pin to HIGH -> disables all motor functions
      - switch.turn_off: ${stepper_motor_id}_fan
      
output:
  - platform: gpio
    pin: ${stepper_enable_pin}
    id: ${stepper_motor_id}_enable_pin

switch:
  - platform: gpio
    pin: ${stepper_fan_pin}
    id: ${stepper_motor_id}_fan
    name: ${stepper_motor_id_upper}.fan
    inverted: "true"
    internal: "true"
    
binary_sensor:
  - platform: gpio
    name: ${device_name_upper}.diag_pin_1
    id: ${device_name}_diag_pin_1
    pin: 
      number: ${stepper_diag_pin_1}
      mode:
        input: true
        pullup: true
      inverted: false
    on_press:
      - button.press: ${stepper_motor_id}_stop
      - logger.log:
          format: "Stepper 1 is losing steps: emergency stop"
          level: ERROR
      
  - platform: gpio
    name: ${device_name_upper}.diag_pin_2
    id: ${device_name}_diag_pin_2
    pin: 
      number: ${stepper_diag_pin_2}
      mode:
        input: true
        pullup: true
      inverted: false
    on_press:
      - button.press: ${stepper_motor_id}_stop
      - logger.log:
          format: "Stepper 2 is losing steps: emergency stop"
          level: ERROR
      
  - platform: gpio
    name: ${device_name_upper}.diag_pin_3
    id: ${device_name}_diag_pin_3
    pin: 
      number: ${stepper_diag_pin_3}
      mode:
        input: true
        pullup: true
      inverted: false
    on_press:
      - button.press: ${stepper_motor_id}_stop
      - logger.log:
          format: "Stepper 3 is losing steps: emergency stop"
          level: ERROR
    
  - platform: gpio
    name: ${device_name_upper}.sleep_state_pin
    id: ${device_name}_sleep_state_pin
    pin:
      number: ${stepper_sleep_state_pin}
      mode:
        input: true
        pullup: true
      inverted: true
    on_press:
      then:
        - output.turn_on: ${stepper_motor_id}_enable_pin
        - switch.turn_off: ${stepper_motor_id}_fan
    on_release:
        - output.turn_off: ${stepper_motor_id}_enable_pin
        - switch.turn_on: ${stepper_motor_id}_fan
      
interval:
  - interval: 60s
    then:
      if:
        condition:
          binary_sensor.is_off: ${device_name}_sleep_state_pin
        then:
          - switch.turn_on: ${stepper_motor_id}_fan
          - delay: 40s
          - switch.turn_off: ${stepper_motor_id}_fan
        else:
          - switch.turn_off: ${stepper_motor_id}_fan