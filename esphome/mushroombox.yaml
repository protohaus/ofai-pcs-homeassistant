substitutions:
  #general settings
  host_name: esp32-mushroombox
  device_name: esp32_mushroombox
  device_name_upper: esp32.mushroombox
  status_led_interval_ok: 10s
  status_led_interval_booting: 3s
  settings_log_level: DEBUG
  settings_flash_write_interval: 1min
  
  #I2C Bus
  i2c_bus_a_name: i2c_bus_a
  i2c_bus_a_sda: GPIO23
  i2c_bus_a_scl: GPIO22

  # webserver
  web_server_ota_active: "true"
  
  # EZO settings
  max_retry_attempts: "4"
  default_temp_comp_value: "25"
  
  # EZO Enable Pins
  enable_rtd_pin: GPIO33
  enable_ec_pin: GPIO12
  enable_ph_pin: GPIO13
  
  # EZO sample intervals
  min_sample_interval_ec: "2000" # 1s
  max_sample_interval_ec: "10000" # 60min
  
  min_sample_interval_ph: "2000" # 1s
  max_sample_interval_ph: "10000" # 60min
  
  min_sample_interval_rtd: "1000" # 1s
  max_sample_interval_rtd: "10000" # 60min
  
  min_sample_interval_ec_tempcomp: "10000" 
  max_sample_interval_ec_tempcomp: "60000"
  
  min_sample_interval_ph_tempcomp: "10000" 
  max_sample_interval_ph_tempcomp: "60000"
  
  min_mqtt_interval_ec: "1000"
  max_mqtt_interval_ec: "3600000"
  
  min_mqtt_interval_ph: "1000"
  max_mqtt_interval_ph: "3600000"
  
  min_mqtt_interval_rtd: "1000"
  max_mqtt_interval_rtd: "3600000"
  
  entities_internal: "false"
  
  mqtt_rtd_enabled: "true"
  mqtt_ec_enabled: "true"
  mqtt_ph_enabled: "true"
  
  mqtt_entities_internal: "false"

light:
  - platform: neopixelbus
    type: GRB
    variant: WS2812 #800KBPS #WS2812 #WS2812X #
    pin: GPIO27
    num_leds: 45
    name: ${device_name_upper}.neo_pixel
    id: ${device_name}_neo_pixel
    #invert: true
         
globals:
  - id: ${device_name}_neo_pixel_is_on
    type: bool
    restore_value: no
    initial_value: "false"  

switch:        
  - platform: template
    name: ${device_name}.neo_pixel_switch
    id: ${device_name}_neo_pixel_switch
    lambda: |-
      return id(${device_name}_neo_pixel_is_on);
    turn_on_action:
      - light.turn_on:
          id: ${device_name}_neo_pixel
          red: 50%
          green: 50%
          blue: 50%
      - globals.set:
          id: ${device_name}_neo_pixel_is_on
          value: "true"
    turn_off_action:
      - light.turn_off: ${device_name}_neo_pixel
      - globals.set:
          id: ${device_name}_neo_pixel_is_on
          value: "false" 

number:
                       
  - platform: template
    min_value: "0"
    max_value: "1"
    step: "0.01"
    id: ${device_name}_set_brightness
    name: ${device_name_upper}.set_brightness
    optimistic: true
    mode: box
    restore_value : true
    initial_value: "0.5"
    update_interval: "10s"
    unit_of_measurement: ""
    on_value:
      - light.turn_on:
          id: ${device_name}_neo_pixel
          brightness: !lambda |-
              return x;
              
  - platform: template
    min_value: "0"
    max_value: "1"
    step: "0.01"
    id: ${device_name}_set_red
    name: ${device_name_upper}.set_red
    optimistic: true
    mode: box
    restore_value : true
    initial_value: "0.5"
    update_interval: "10s"
    unit_of_measurement: ""
    on_value:
      - light.turn_on:
          id: ${device_name}_neo_pixel
          brightness: !lambda |-
              return id(${device_name}_set_brightness).state;
          red: !lambda |-
              return x;
          green: !lambda |-
              return id(${device_name}_set_green).state;
          blue: !lambda |-
              return id(${device_name}_set_blue).state;

  - platform: template
    min_value: "0"
    max_value: "1"
    step: "0.01"
    id: ${device_name}_set_green
    name: ${device_name_upper}.set_green
    optimistic: true
    mode: box
    restore_value : true
    initial_value: "0.5"
    update_interval: "10s"
    unit_of_measurement: ""
    on_value:
      - light.turn_on:
          id: ${device_name}_neo_pixel
          brightness: !lambda |-
              return id(${device_name}_set_brightness).state;
          red: !lambda |-
              return id(${device_name}_set_red).state;
          green: !lambda |-
              return x;
          blue: !lambda |-
              return id(${device_name}_set_blue).state;  
  - platform: template
    min_value: "0"
    max_value: "1"
    step: "0.01"
    id: ${device_name}_set_blue
    name: ${device_name_upper}.set_blue
    optimistic: true
    mode: box
    restore_value : true
    initial_value: "0.5"
    update_interval: "10s"
    unit_of_measurement: ""
    on_value:
      - light.turn_on:
          id: ${device_name}_neo_pixel
          brightness: !lambda |-
              return id(${device_name}_set_brightness).state;
          red: !lambda |-
              return id(${device_name}_set_red).state;
          green: !lambda |-
              return id(${device_name}_set_green).state;
          blue: !lambda |-
              return x;  
              
button:
          
  - platform: template
    name: ${device_name_upper}.neo_pixel_red
    id: ${device_name}_neo_pixel_red
    on_press:
      - light.turn_on:
          id: ${device_name}_neo_pixel
          red: 100%
          green: 0%
          blue: 0%
          
  - platform: template
    name: ${device_name_upper}.neo_pixel_blue
    id: ${device_name}_neo_pixel_blue
    on_press:
      - light.turn_on:
          id: ${device_name}_neo_pixel
          red: 0%
          green: 0%
          blue: 100%
  
  - platform: template
    name: ${device_name_upper}.neo_pixel_green
    id: ${device_name}_neo_pixel_green
    on_press:
      - light.turn_on:
          id: ${device_name}_neo_pixel
          red: 0%
          green: 100%
          blue: 0%
  
  - platform: template
    name: ${device_name_upper}.neo_pixel_white
    id: ${device_name}_neo_pixel_white
    on_press:
      - light.turn_on:
          id: ${device_name}_neo_pixel
          red: 100%
          green: 100%
          blue: 100%
  
  - platform: template
    name: ${device_name_upper}.neo_pixel_off
    id: ${device_name}_neo_pixel_off
    on_press:
      - light.turn_off: ${device_name}_neo_pixel
               
esphome:
  name: ${host_name}
  platform: ESP32
  board: esp32dev
  #board: nodemcu-32s    

wifi:
  ssid: !secret wifi_makeracademy_ssid
  password: !secret wifi_makeracademy_pw
  
  #ssid: !secret wifi_ap_ssid
  #password: !secret wifi_ap_pw
  

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "$device_name_upper AP"
    password: !secret esphome_fallback_ap_pw
  
  fast_connect: true
  
captive_portal:

sensor:
  - platform: wifi_signal
    name: "${device_name_upper}.wifi_signal"
    id: ${device_name}_wifi_signal
    update_interval: 60s
    
packages:
  #common_api: !include common/api.yaml
  common_ota: !include common/ota.yaml
  common_logger: !include common/logger.yaml
  common_preferences: !include common/preferences.yaml
  common_status: !include common/status.yaml
  common_restart: !include common/restart.yaml
  common_web_server: !include common/web_server.yaml