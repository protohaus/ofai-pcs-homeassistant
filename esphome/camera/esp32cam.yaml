substitutions:
  status_led_pin: GPIO12
  i2c_bus_b_sda: GPIO13
  i2c_bus_b_scl: GPIO15
  bme_280_update_interval: "10s"
  bh1750_update_interval: "10s"
  bh1750_resolution: "0.5" # values from 0.5 to 4.0
  bh1750_measurement_duration: "69" #31 Sunny light (121556 lx), 69: default (54612.5 lx), 254  for low light situation (14835 lx)
  
# Example configuration entry
esp32_camera:
  name: ${device_name_upper} Camera
  external_clock:
    pin: GPIO0
    frequency: 20MHz
  i2c_pins:
    sda: GPIO26
    scl: GPIO27
  data_pins: [GPIO5, GPIO18, GPIO19, GPIO21, GPIO36, GPIO39, GPIO34, GPIO35]
  vsync_pin: GPIO25
  href_pin: GPIO23
  pixel_clock_pin: GPIO22
  power_down_pin: GPIO32
  resolution: 1600x1200         # Possible values: 400x296, 640x480, 800x600, 1024x768, 1280x1024, 1600x1200
  jpeg_quality: 10              # values from 10 to 63 (10: best, 63: worst)
  contrast: 0                   # values from -2 to 2
  brightness: 0                 # values from -2 to 2
  saturation: 0                 # values from -2 to 2
  idle_framerate: ${custom_idle_framerate}
  vertical_flip: false
  horizontal_mirror: false
  max_framerate: 10 fps
  test_pattern: false

switch:
  - platform: gpio
    name: ${device_name_upper} Flashlight
    id: ${device_name}_flashlight
    pin: GPIO04

# Example configuration entry
light:
  - platform: status_led
    name: ${device_name_upper} Status LED
    id: ${device_name}_status_led
    pin: 
      number: ${status_led_pin}
    internal: true
    
# Example configuration entry
binary_sensor:
  - platform: status
    name: ${device_name_upper} Status
    id: ${device_name}_status

interval:
  - interval: 20s
    then:
      if:
        condition:
          - binary_sensor.is_on: ${device_name}_status
        then:
          - light.turn_on: ${device_name}_status_led
          - delay: 1s
          - light.turn_off: ${device_name}_status_led
  - interval: 5s
    then:
      if:
        condition:
          - binary_sensor.is_off: ${device_name}_status
        then:
          - light.turn_on: ${device_name}_status_led
          - delay: 1s
          - light.turn_off: ${device_name}_status_led
        
i2c:
  - id: bus_b
    sda: ${i2c_bus_b_sda}
    scl: ${i2c_bus_b_scl}
    scan: true
     
# Example configuration entry
sensor:
  # BMP280 (later should be BME280 with humidity)
  - platform: bmp280
    i2c_id: bus_b
    temperature:
      name: "${device_name_upper} BMP280 1 Temperature"
      id: ${device_name}_bmp280_1_temperature
      oversampling: 16x
    pressure:
      name: "${device_name_upper} BMP280 1 Pressure"
      id: ${device_name}_bmp280_1_pressure
    address: 0x76
    update_interval: ${bme_280_update_interval}
  - platform: bmp280
    i2c_id: bus_b
    temperature:
      name: "${device_name_upper} BMP280 2 Temperature"
      id: ${device_name}_bmp280_2_temperature
      oversampling: 16x
    pressure:
      name: "${device_name_upper} BMP280 2 Pressure"
      id: ${device_name}_bmp280_2_pressure
    address: 0x77
    update_interval: ${bme_280_update_interval}
    
  # BH1750 Illuminance  
  - platform: bh1750
    i2c_id: bus_b
    name: "${device_name_upper} BH1750 1 Illuminance"
    id: "${device_name}_bh1750_1_illuminance"
    address: 0x23
    measurement_duration: ${bh1750_measurement_duration}
    update_interval: ${bh1750_update_interval}
    resolution: ${bh1750_resolution}
  - platform: bh1750
    i2c_id: bus_b
    name: "${device_name_upper} BH1750 2 Illuminance"
    id: "${device_name}_bh1750_2_illuminance"
    address: 0x5C
    measurement_duration: ${bh1750_measurement_duration}
    update_interval: ${bh1750_update_interval}
    resolution: ${bh1750_resolution} 