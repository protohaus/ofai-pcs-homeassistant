packages:
  pump_1: !include pump_1.yaml
  pump_2: !include pump_2.yaml

globals:
  - id: pumps_enabled
    type: bool
    restore_value: no
    initial_value: "false" 
    
  - id: pump_is_on
    type: bool
    restore_value: no
    initial_value: "false" 
  
  - id: single_activation_is_on
    type: bool
    restore_value: no
    initial_value: "false" 
    
  - id: pump_automation_is_on
    type: bool
    restore_value: no
    initial_value: "false"  
    
switch:   
  - platform: template
    name: ${device_name_upper}.enable
    id: ${device_name}_enable
    lambda: |-
       if (id(pumps_enabled) == true)
         return true;
       else
         return false;
    turn_on_action:
      then:
        - globals.set:
            id: pumps_enabled
            value: "true"
    turn_off_action:
      then:
        - globals.set:
            id: pumps_enabled
            value: "false" 
        - switch.turn_off: ${device_name}_activate
        - switch.turn_off: ${device_name}_automation
  
  - platform: template
    name: ${device_name_upper}.activate
    id: ${device_name}_activate
    internal: true
    lambda: |-
       if (id(pump_is_on) == true)
         return true;
       else
         return false;
    turn_on_action:
      then:
        - lambda: |-
            if (id(${device_name}_enable).state == true)
            {
              id(${device_name}_pump_1).turn_on();
              id(${device_name}_pump_2).turn_on();
              id(pump_is_on) = true;
            }
    turn_off_action:
      then:
        - lambda: |-
            id(${device_name}_pump_1).turn_off();
            id(${device_name}_pump_2).turn_off();
            id(pump_is_on) = false;
  
  - platform: template
    name: ${device_name_upper}.single_activation
    id: ${device_name}_single_activation
    lambda: |-
       if (id(single_activation_is_on) == true)
         return true;
       else
         return false;
    turn_on_action:
      then:
        - lambda: |-
            if (id(${device_name}_enable).state == true)
            {
              id(${device_name}_activate).turn_on();
              id(single_activation_is_on) = true;
            }
        - delay: ${pump_automation_interval_length}
        - lambda: |-
            id(${device_name}_activate).turn_off();
            id(single_activation_is_on) = false;
    turn_off_action:
      then:
        - lambda: |-
            id(${device_name}_activate).turn_off();
            id(single_activation_is_on) = false;
  
  - platform: template
    name: ${device_name_upper}.automation
    id: ${device_name}_automation
    icon: mdi:water-pump
    lambda: |-
       if (id(pump_automation_is_on) == true)
         return true;
       else
         return false;
    turn_on_action:
      then:
        - globals.set:
            id: pump_automation_is_on
            value: "true"
    turn_off_action:
      then:
        - switch.turn_off: ${device_name}_activate
        - globals.set:
            id: pump_automation_is_on
            value: "false"
            
interval:
  - interval: 60 s
    then:
      - if:
          condition:
            not:
              api.connected:
          then:
            lambda: |-
              if (id(boot_finished))
              {
                id(${device_name}_activate).turn_off();
                id(${device_name}_automation).turn_off();
                id(${device_name}_enable).turn_off();
              }
        
  - interval: ${pump_automation_interval}
    then:
      - if:
          condition:
            lambda: |-
              if (id(${device_name}_enable).state == true)
                return true;
              else
                return false;
          then:
            - lambda: |-
                if(id(${device_name}_automation).state == true)
                  id(${device_name}_activate).turn_on();
            - delay: ${pump_automation_interval_length}
            - lambda: |-
                id(${device_name}_activate).turn_off();  