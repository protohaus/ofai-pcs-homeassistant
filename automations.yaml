- id: looper
  alias: looper
  initial_state: true
  mode: restart
  trigger:
  - id: trigger_looper
    platform: state
    entity_id: input_boolean.activate_looper
    to: 'on'
  condition:
  - condition: trigger
    id: trigger_looper
  action:
  - repeat:
      while:
      - condition: or
        conditions:
        - condition: template
          value_template: '{% if is_state(''input_boolean.activate_looper'', ''on'')
            %} true {% else %} false {% endif %}'
      sequence:
      - service: persistent_notification.create
        data_template:
          title: Looper {{now().timestamp()|timestamp_local}}
          message: Looper has triggered.
      - delay: 00:00:01
- id: '1670317243362'
  alias: nodered_restart
  description: ''
  trigger:
  - platform: time
    at: 00:00:00
  condition: []
  action:
  - service: hassio.addon_restart
    data:
      addon: a0d7b954_nodered
  mode: restart
- id: '1670317667056'
  alias: watchdog_notification_example
  description: ''
  trigger:
  - platform: time
    at: 09:00:00
  condition: []
  action:
  - service: persistent_notification.create
    data:
      title: '#Info- #Status'
      notification_id: watchdog_notification_example
      message: Daily Life Sign.
  mode: restart
- id: '1672134136129'
  alias: watchdog_led_temperature
  description: ''
  trigger:
  - platform: time_pattern
    seconds: /30
  condition:
  - condition: or
    conditions:
    - condition: numeric_state
      entity_id: sensor.pcs1_led_panel_max_temperature
      above: '50'
    - condition: numeric_state
      entity_id: sensor.pcs1_growth_chamber_average_temperature
      above: '26'
    - condition: numeric_state
      entity_id: sensor.pcs1_kin_dallas_4_temperature
      above: '45'
  action:
  - service: homeassistant.turn_off
    data: {}
    target:
      entity_id:
      - sensor.pcs1_main_power
  mode: single
- id: '1674218687970'
  alias: watchdog_node_red_heartbeat
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /10
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.node_red_heartbeat
        state: 'off'
      sequence:
      - service: persistent_notification.create
        data:
          message: Node Red Offline
          title: Node Red Offline - turned off PCS Main Switch
          notification_id: nodered_offline
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.pcs1_kin_stepper_start_automation
      - delay:
          hours: 0
          minutes: 0
          seconds: 10
          milliseconds: 0
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.pcs1_main
    - conditions:
      - condition: state
        entity_id: input_boolean.node_red_heartbeat
        state: 'on'
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.node_red_heartbeat
    default: []
  mode: single
- id: '1674833598388'
  alias: automation_power_supply_control
  description: ''
  trigger:
  - platform: time_pattern
    seconds: /10
  condition:
  - condition: state
    entity_id: input_boolean.pcs1_automation_power_supply_active
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: time
        after: input_datetime.pcs1_power_supply_end
        before: input_datetime.pcs1_power_supply_start
        weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.pcs1_main
    - conditions:
      - condition: time
        weekday:
        - sun
        - sat
        after: 00:00:00
        before: '23:59:59'
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.pcs1_main
    default: []
  mode: restart
